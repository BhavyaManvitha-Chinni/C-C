import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';

const RightAgainstExploitationGame = () => {
  const navigate = useNavigate();

  // Simple questions for children related to the Right Against Exploitation
  const questions = [
    {
      question: "Can children work in dangerous jobs like factories or mines?",
      options: ["Yes", "No", "Only sometimes"],
      answer: "No",
    },
    {
      question: "What does it mean to be free from human trafficking?",
      options: [
        "People can be bought and sold",
        "No one should be bought or sold",
        "Only rich people can buy others",
      ],
      answer: "No one should be bought or sold",
    },
    {
      question: "Is it okay to make someone work without paying them?",
      options: ["Yes", "No", "Only if they agree"],
      answer: "No",
    },
    {
      question: "Who should not be forced to work?",
      options: ["Children", "Adults", "Everyone"],
      answer: "Everyone",
    },
    {
      question: "What should you do if you see a child working in a dangerous job?",
      options: [
        "Ignore it",
        "Tell an adult or the police",
        "Help the child work",
      ],
      answer: "Tell an adult or the police",
    },
  ];

  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [score, setScore] = useState(0);
  const [showScore, setShowScore] = useState(false);

  // Handle answer selection
  const handleAnswerClick = (option) => {
    if (option === questions[currentQuestion].answer) {
      setScore(score + 1);
    }

    const nextQuestion = currentQuestion + 1;
    if (nextQuestion < questions.length) {
      setCurrentQuestion(nextQuestion);
    } else {
      setShowScore(true);
    }
  };

  // Handle replay action
  const handlePlayAgain = () => {
    setCurrentQuestion(0);
    setScore(0);
    setShowScore(false);
  };

  // Navigate to the Right to Freedom of Religion page if score is 75% or more
  const handleNavigateToNextPage = () => {
    if ((score / questions.length) >= 0.75) {
      navigate('/right-to-freedom-of-religion'); // Update with the actual route
    } else {
      handlePlayAgain();
    }
  };

  return (
    <div style={styles.container}>
      {showScore ? (
        <div style={styles.scoreSection}>
          <h2>You scored {score} out of {questions.length}!</h2>
          {score / questions.length >= 0.75 ? (
            <p style={styles.playAgain} onClick={handleNavigateToNextPage}>
              Proceed to Right to Freedom of Religion
            </p>
          ) : (
            <p style={styles.playAgain} onClick={handlePlayAgain}>
              Play Again
            </p>
          )}
        </div>
      ) : (
        <div style={styles.questionSection}>
          <h2 style={styles.questionTitle}>{questions[currentQuestion].question}</h2>
          <div style={styles.optionsContainer}>
            {questions[currentQuestion].options.map((option, index) => (
              <button key={index} style={styles.optionButton} onClick={() => handleAnswerClick(option)}>
                {option}
              </button>
            ))}
          </div>
        </div>
      )}
    </div>
  );
};

const styles = {
  container: {
    padding: '20px',
    background: 'linear-gradient(to right, #f6d365, #fda085)',
    minHeight: '100vh',
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    justifyContent: 'center',
    fontFamily: 'Comic Sans MS, sans-serif',
  },
  questionSection: {
    width: '80%',
    textAlign: 'center',
  },
  questionTitle: {
    fontSize: '2rem',
    color: '#004d40',
    marginBottom: '20px',
  },
  optionsContainer: {
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
  },
  optionButton: {
    backgroundColor: '#ffcccb',
    border: 'none',
    borderRadius: '10px',
    padding: '10px 20px',
    fontSize: '1.2rem',
    margin: '10px 0',
    cursor: 'pointer',
    transition: 'background-color 0.3s ease',
  },
  scoreSection: {
    textAlign: 'center',
    color: '#333',
  },
  playAgain: {
    fontSize: '1.5rem',
    color: '#ff6347',
    cursor: 'pointer',
    marginTop: '20px',
  },
};

export default RightAgainstExploitationGame;
